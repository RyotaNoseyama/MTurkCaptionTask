generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Participant {
  workerId   String   @id @map("worker_id")
  cond       Int?
  tz         String?
  consentAt  DateTime? @map("consent_at")

  submissions Submission[]
  scores      Score[]  @relation("ParticipantScores")

  @@map("participants")
}

model Day {
  id       String   @id @default(cuid())
  idx      Int      @unique
  dateEt   DateTime @map("date_et")

  @@map("days")
}

model Submission {
  id          String   @id @default(cuid())
  workerId    String   @map("worker_id")
  dayIdx      Int      @map("day_idx")
  captionA    String   @map("caption_a")
  scoreA      Int?     @map("score_a")
  score       Int?
  rtMs        Int?     @map("rt_ms")
  submittedAt DateTime? @default(now()) @map("submitted_at")

  participant Participant @relation(fields: [workerId], references: [workerId])
  scoreRelation Score?   @relation("SubmissionScore")

  @@unique([workerId, dayIdx])
  @@map("submissions")
}

model Score {
  id            String   @id @default(cuid())
  submissionId  String   @unique @map("submission_id")
  workerId      String   @map("worker_id")
  score         Int
  is7plus       Boolean  @default(false) @map("is_7plus")
  scoredAt      DateTime @default(now()) @map("scored_at")
  scorer        String?

  submission    Submission @relation("SubmissionScore", fields: [submissionId], references: [id])
  participant   Participant @relation("ParticipantScores", fields: [workerId], references: [workerId])

  @@map("scores")
}

model GroupGoal {
  id        String   @id @default(cuid())
  dayIdx    Int      @unique @map("day_idx")
  count     Int      @default(0)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("group_goals")
}
